# Add this endpoint to src/api/main.py

@app.post("/api/analyze/ai", response_model=Dict[str, Any], tags=["AI Analysis"])
async def ai_code_analysis(request: CodeScanRequest):
    '''Analyze code using AI-powered CodeBERT model'''
    try:
        from src.analyzers.ai_analyzer import AIEnhancedAnalyzer
        
        analyzer = AIEnhancedAnalyzer()
        if not analyzer.ai_ready:
            raise HTTPException(
                status_code=503,
                detail="AI features not available. Model may be downloading."
            )
        
        # Analyze with AI
        vulnerabilities = await analyzer.analyze(
            request.code,
            request.language,
            request.filename
        )
        
        # Get embeddings
        embedding = analyzer.codebert.get_embedding(request.code, request.language)
        
        return {
            "vulnerabilities": [
                {
                    "name": v.name,
                    "severity": v.severity.value,
                    "confidence": v.confidence,
                    "line": v.line_start,
                    "ai_explanation": v.ai_explanation
                }
                for v in vulnerabilities
            ],
            "embedding_sample": embedding[:5].tolist(),  # First 5 values
            "ai_analysis": {
                "model": "microsoft/codebert-base",
                "embedding_size": len(embedding),
                "language": request.language
            }
        }
        
    except ImportError:
        raise HTTPException(
            status_code=503,
            detail="AI analyzer not installed"
        )
    except Exception as e:
        raise HTTPException(
            status_code=500,
            detail=f"AI analysis failed: {str(e)}"
        )
